#declare states = array[52];
#declare states[0] = 144; // Alabama
#declare states[1] = 37; // Alaska
#declare states[2] = 94; // Arizona
#declare states[3] = 99; // Arkansas
#declare states[4] = 764; // California
#declare states[5] = 156; // Colorado
#declare states[6] = 157; // Connecticut    
#declare states[7] = 32; // Delaware     
#declare states[8] = 35; // DC   
#declare states[9] = 252; // Florida
#declare states[10] = 144; // Georgia
#declare states[11] = 97; // Hawaii
#declare states[12] = 66; // Idaho
#declare states[13] = 325; // Illinois 
#declare states[14] = 179; // Indiana
#declare states[15] = 230; // Iowa
#declare states[16] = 108; // Kansas
#declare states[17] = 135; // Kentucky
#declare states[18] = 80; // Louisiana
#declare states[19] = 93; // Maine
#declare states[20] = 35;
#declare states[21] = 35;
#declare states[22] = 35;
#declare states[23] = 35;
#declare states[24] = 35;
#declare states[25] = 35;
#declare states[26] = 35;
#declare states[27] = 35;
#declare states[28] = 35;
#declare states[29] = 35;
#declare states[30] = 35;
#declare states[31] = 35;
#declare states[32] = 35;
#declare states[33] = 35;
#declare states[34] = 35;
#declare states[35] = 35;
#declare states[36] = 35;
#declare states[37] = 35;
#declare states[38] = 35;
#declare states[39] = 35;
#declare states[40] = 35;
#declare states[41] = 35;
#declare states[42] = 35;
#declare states[43] = 35;
#declare states[44] = 35;
#declare states[45] = 35;
#declare states[46] = 35;
#declare states[47] = 35;
#declare states[48] = 35;
#declare states[49] = 35;
#declare states[50] = 35;   
#declare states[51] = 35;   
          
#declare abbrev = array[52];

#declare abbrev[0] = "AL";
#declare abbrev[1] = "AK";
#declare abbrev[2] = "AZ";
#declare abbrev[3] = "AR"; // Arkansas
#declare abbrev[4] = "CA"; // California
#declare abbrev[5] = "CO"; // Colorado
#declare abbrev[6] = "CT"; // Connecticut    
#declare abbrev[7] = "DE"; // Delaware     
#declare abbrev[8] = "DC"; // DC   
#declare abbrev[9] = "FL"; // Florida
#declare abbrev[10] = "GE"; // Georgia
#declare abbrev[11] = "HI"; // Hawaii
#declare abbrev[12] = "ID"; // Idaho
#declare abbrev[13] = "IL"; // Illinois 
#declare abbrev[14] = "IN"; // Indiana
#declare abbrev[15] = "IA"; // Iowa
#declare abbrev[16] = "KS"; // Kansas
#declare abbrev[17] = "KT"; // Kentucky
#declare abbrev[18] = "LA"; // Louisiana
#declare abbrev[19] = "ME"; // Maine
#declare abbrev[20] = "ME";
#declare abbrev[21] = "ME";
#declare abbrev[22] = "ME";
#declare abbrev[23] = "ME";
#declare abbrev[24] = "ME";
#declare abbrev[25] = "ME";
#declare abbrev[26] = "ME";
#declare abbrev[27] = "ME";
#declare abbrev[28] = "ME";
#declare abbrev[29] = "ME";
#declare abbrev[30] = "ME";
#declare abbrev[31] = "ME";
#declare abbrev[32] = "ME";
#declare abbrev[33] = "ME";
#declare abbrev[34] = "ME";
#declare abbrev[35] = "ME";
#declare abbrev[36] = "ME";
#declare abbrev[37] = "ME";
#declare abbrev[38] = "ME";
#declare abbrev[39] = "ME";
#declare abbrev[40] = "ME";
#declare abbrev[41] = "ME";
#declare abbrev[42] = "ME";
#declare abbrev[43] = "ME";
#declare abbrev[44] = "ME";
#declare abbrev[45] = "ME";
#declare abbrev[46] = "ME";
#declare abbrev[47] = "ME";
#declare abbrev[48] = "ME";
#declare abbrev[49] = "ME";
#declare abbrev[50] = "ME";   
#declare abbrev[51] = "ME";

#declare divisor = 50;

#include "colors.inc"   

camera {
    location <10, 10, -75>
    look_at <10, 10, 0>
}

light_source {
    <0, 2000, 0>
    White
}

light_source {
    <0, 1000,-2000>
    White
}        

light_source {
    <0, 10, 99>
    White
}    

plane {
    z, 100
    pigment {    
        gradient y
        pigment_map {
            [0.0 Black]
            [1.0 rgb <0.025, 0.0, 0.05>]     
        }    
        //checker color Red, rgb <0.8, 0.2, 0.1>       
        scale 200
        phase 1.5
    }
}  

box {
    <-100,0,0>
    <100,-0.1,-500>
    pigment {
        rgb <0.8, 0.8, 0.8>
    }
    normal {
        dents 0.5
        scale 0.1
    }
    finish {
        reflection { 0.5 }
    }
}                      

#declare iter = 0;  
#declare statesum = 0;

#while (iter < 19)

#if (iter = 0)
/*sphere {
    <0, 0, 0>
    states[iter] / 100
    pigment {
        rgb <1/(states[iter]/100), states[iter]/100, 0.5>
    }
    translate y*(states[iter]/100)
} */
cylinder {
    <0,0,0>
    <0,states[iter]/divisor,0>
    1
    pigment {
        rgb <1/(states[iter]/100), states[iter]/100, 0.5>
    }
}       
#declare statesum = states[iter] / divisor;
#else 
/*
sphere {
    <statesum + (states[iter]/100), 0, 0> // Sum of old radii plus this radius plus buffer.
    states[iter] / 100
    pigment {
        rgb <1/(states[iter]/100), states[iter]/100, 0.5>
    }
    translate y*(states[iter]/100)
} 
*/
cylinder {
    <iter * 3, 0, 0>
    <iter * 3, states[iter]/divisor, 0>
    1
    pigment {
        rgb <1/(states[iter]/100), states[iter]/100, 0.5>
    }
}  

text { 
    ttf "arial.ttf", 
    abbrev[iter], 0.02, 0.0 // thickness, offset
    texture{ pigment{ color rgb<1,1,1>*1.3 } 
          //normal { bumps 0.5  scale 0.01 }
            finish { phong 0.1 }
          } // end of texture
    
    scale<1,1.25,1>*0.8
    translate<iter*3, states[iter]/divisor+5,0>
} // end of text object ---------------------------------------------

    
#declare statesum = statesum + (states[iter] / divisor) * 2;
#end

#declare iter = iter + 1;

#end       
